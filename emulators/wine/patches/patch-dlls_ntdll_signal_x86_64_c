$OpenBSD$
--- dlls/ntdll/signal_x86_64.c.orig	Sat Mar 24 01:19:15 2012
+++ dlls/ntdll/signal_x86_64.c	Sun Mar 25 22:23:49 2012
@@ -235,6 +235,45 @@ extern int arch_prctl(int func, void *ptr);
 #define ERROR_sig(context)  ((context)->uc_mcontext.__gregs[_REG_ERR])
 
 #define FPU_sig(context)   ((XMM_SAVE_AREA32 *)((context)->uc_mcontext.__fpregs))
+
+#elif defined(__OpenBSD__)
+#include <machine/mcontext.h>
+#include <sys/types.h>
+#include <signal.h>
+
+#define RAX_sig(context)    ((context)->sc_rax)
+#define RBX_sig(context)    ((context)->sc_rbx)
+#define RCX_sig(context)    ((context)->sc_rcx)
+#define RDX_sig(context)    ((context)->sc_rdx)
+#define RSI_sig(context)    ((context)->sc_rsi)
+#define RDI_sig(context)    ((context)->sc_rdi)
+#define RBP_sig(context)    ((context)->sc_rbp)
+#define R8_sig(context)     ((context)->sc_r8)
+#define R9_sig(context)     ((context)->sc_r9)
+#define R10_sig(context)    ((context)->sc_r10)
+#define R11_sig(context)    ((context)->sc_r11)
+#define R12_sig(context)    ((context)->sc_r12)
+#define R13_sig(context)    ((context)->sc_r13)
+#define R14_sig(context)    ((context)->sc_r14)
+#define R15_sig(context)    ((context)->sc_r15)
+
+#define CS_sig(context)     ((context)->sc_cs)
+#define DS_sig(context)     ((context)->sc_ds)
+#define ES_sig(context)     ((context)->sc_es)
+#define FS_sig(context)     ((context)->sc_fs)
+#define GS_sig(context)     ((context)->sc_gs)
+#define SS_sig(context)     ((context)->sc_ss)
+
+#define EFL_sig(context)    ((context)->sc_rfl)
+
+#define RIP_sig(context)    (*((unsigned long*)&(context)->sc_rip))
+#define RSP_sig(context)    (*((unsigned long*)&(context)->sc_ursp))
+
+#define TRAP_sig(context)   ((context)->sc_trapno)
+#define ERROR_sig(context)  ((context)->sc_err)
+
+#define FPU_sig(context)   ((XMM_SAVE_AREA32 *)((context)->uc_mcontext.__fpregs))
+
 #else
 #error You must define the signal context functions for your platform
 #endif
@@ -2447,7 +2486,7 @@ void signal_init_thread( TEB *teb )
 
 #if defined __linux__
     arch_prctl( ARCH_SET_GS, teb );
-#elif defined (__FreeBSD__) || defined (__FreeBSD_kernel__)
+#elif defined (__FreeBSD__) || defined (__FreeBSD_kernel__) || defined (__OpenBSD__)
     amd64_set_gsbase( teb );
 #else
 # error Please define setting %gs for your architecture
